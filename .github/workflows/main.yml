name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    name: Build Android APK & AAB
    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Flutter (Dart 3.4+ compatible)
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"
          cache: true

      # 3. Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 4. Force recreate Android folder
- name: Force recreate Android folder
  run: |
    echo "üõ† Removing existing android folder (if any)..."
    rm -rf android
    echo "‚ö° Generating fresh Android platform..."
    flutter create --platforms=android .
    if [ ! -d "android/app" ]; then
      echo "‚ùå Failed to create android folder!"
      exit 1
    else
      echo "‚úÖ Android folder successfully created."
    fi

      # 5. Add INTERNET permission
      - name: Add Internet permission
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if [ -f "$MANIFEST" ] && ! grep -q 'android.permission.INTERNET' $MANIFEST; then
            sed -i '/<application/i\    <uses-permission android:name="android.permission.INTERNET"/>' $MANIFEST
          fi

      # 6. Copy Firebase google-services.json
      - name: Copy Firebase config
        run: |
          if [ -f "firebase/google-services.json" ]; then
            mkdir -p android/app
            cp firebase/google-services.json android/app/google-services.json
            echo "‚úÖ google-services.json copied"
          else
            echo "‚ö†Ô∏è firebase/google-services.json not found, skipping..."
          fi

      # 7. Patch android/build.gradle (Google Services)
      - name: Patch android/build.gradle
        run: |
          FILE="android/build.gradle"
          if [ -f "$FILE" ]; then
            if ! grep -q "com.google.gms:google-services" $FILE; then
              sed -i '/dependencies {/a\        classpath "com.google.gms:google-services:4.4.2"' $FILE
            fi
            if ! grep -q "google()" $FILE; then
              sed -i '/repositories {/a\        google()' $FILE
            fi
          fi

      # 8. Patch android/app/build.gradle (apply plugin + ads dependency)
      - name: Patch android/app/build.gradle
        run: |
          FILE="android/app/build.gradle"
          if [ -f "$FILE" ]; then
            if ! grep -q "com.google.gms.google-services" $FILE; then
              echo 'apply plugin: "com.google.gms.google-services"' >> $FILE
            fi
            if ! grep -q "com.google.android.gms:play-services-ads" $FILE; then
              sed -i '/dependencies {/a\    implementation "com.google.android.gms:play-services-ads:23.1.0"' $FILE
            fi
          fi

      # 9. Build APK
      - name: Build APK
        run: flutter build apk --release

      # 10. Build AAB
      - name: Build AAB
        run: flutter build appbundle --release

      # 11. Upload APK & AAB
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
          retention-days: 7
