name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    name: Build Android APK & AAB

    steps:
      - name: 1Ô∏è‚É£ Checkout repository
        uses: actions/checkout@v3

      - name: 2Ô∏è‚É£ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"
          cache: true

      - name: 3Ô∏è‚É£ Install dependencies
        run: flutter pub get

      - name: 4Ô∏è‚É£ Remove Android folder and generate fresh
        run: |
          echo "üõ† Removing android folder..."
          rm -rf android
          flutter create --platforms=android .

      - name: 5Ô∏è‚É£ Wait for AndroidManifest.xml
        run: |
          COUNT=0
          while [ ! -f "android/app/src/main/AndroidManifest.xml" ]; do
            sleep 1
            COUNT=$((COUNT+1))
            if [ $COUNT -gt 30 ]; then
              echo "‚ùå AndroidManifest.xml not found after 30s"
              exit 1
            fi
          done

      - name: 6Ô∏è‚É£ Add Internet permission
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if ! grep -q 'android.permission.INTERNET' $MANIFEST; then
            sed -i '/<application/i\    <uses-permission android:name="android.permission.INTERNET"/>' $MANIFEST
          fi

      - name: 7Ô∏è‚É£ Copy Firebase config
        run: |
          if [ -f "firebase/google-services.json" ]; then
            cp firebase/google-services.json android/app/google-services.json
            echo "‚úÖ google-services.json copied"
          else
            echo "‚ö†Ô∏è google-services.json not found, skipping..."
          fi

      - name: 8Ô∏è‚É£ Patch android/build.gradle (Google Services + Kotlin)
        run: |
          FILE="android/build.gradle"
          # Add google() repository
          if ! grep -q "google()" $FILE; then
            sed -i '/repositories {/a\        google()' $FILE
          fi
          # Add Google Services classpath
          if ! grep -q "com.google.gms:google-services" $FILE; then
            sed -i '/dependencies {/a\        classpath "com.google.gms:google-services:4.4.2"' $FILE
          fi
          # Set Kotlin version
          if ! grep -q "ext.kotlin_version" $FILE; then
            sed -i '/dependencies {/i\ext.kotlin_version = "1.9.10"' $FILE
          else
            sed -i 's/ext.kotlin_version = .*/ext.kotlin_version = "1.9.10"/' $FILE
          fi

      - name: 9Ô∏è‚É£ Patch android/app/build.gradle (Ads + SDK)
        run: |
          FILE="android/app/build.gradle"
          # Add play-services-ads
          if ! grep -q "com.google.android.gms:play-services-ads" $FILE; then
            sed -i '/dependencies {/a\    implementation "com.google.android.gms:play-services-ads:23.4.0"' $FILE
          fi
          # Apply Google Services plugin at top after plugins block
          sed -i '1iapply plugin: "com.google.gms.google-services"' $FILE
          # Ensure compileSdkVersion & targetSdkVersion 35
          sed -i 's/compileSdkVersion .*/compileSdkVersion 35/' $FILE
          sed -i 's/targetSdkVersion .*/targetSdkVersion 35/' $FILE

      - name: 1Ô∏è‚É£0Ô∏è‚É£ Build APK
        run: flutter build apk --release

      - name: 1Ô∏è‚É£1Ô∏è‚É£ Build AAB
        run: flutter build appbundle --release

      - name: 1Ô∏è‚É£2Ô∏è‚É£ Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
          retention-days: 7
