name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    name: Build Android APK
    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.8'
          channel: stable

      # 3. Create Android folder safely (V2 embedding)
      - name: Recreate Android Folder
        run: |
          flutter create . --android-language kotlin --ios-language swift
          echo "Fresh Android folder created"

      # 4. Add INTERNET permission
      - name: Add Internet Permission
        run: |
          if ! grep -q 'android.permission.INTERNET' android/app/src/main/AndroidManifest.xml; then
            sed -i '/<manifest /a \  <uses-permission android:name="android.permission.INTERNET" />' android/app/src/main/AndroidManifest.xml
            echo "Added INTERNET permission"
          fi

      # 5. Copy google-services.json
      - name: Copy google-services.json
        run: |
          if [ -f firebase/google-services.json ]; then
            cp -f firebase/google-services.json android/app/
            echo "google-services.json copied"
          else
            echo "Warning: google-services.json not found!"
          fi

      # 6. Ensure Firebase plugin in build.gradle
      - name: Setup Firebase Gradle Plugin
        run: |
          # Add Google Services classpath
          if ! grep -q "com.google.gms:google-services" android/build.gradle; then
            sed -i "/dependencies {/a \        classpath 'com.google.gms:google-services:4.4.0'" android/build.gradle
            echo "Added Google Services classpath"
          fi
          # Apply plugin
          if ! grep -q "com.google.gms.google-services" android/app/build.gradle; then
            echo "apply plugin: 'com.google.gms.google-services'" >> android/app/build.gradle
            echo "Applied Google Services plugin"
          fi

      # 7. Update SDK, Kotlin & Gradle plugin
      - name: Update SDK, Kotlin & Gradle
        run: |
          sed -i 's/compileSdkVersion .*/compileSdkVersion 34/' android/app/build.gradle
          sed -i 's/targetSdkVersion .*/targetSdkVersion 34/' android/app/build.gradle
          sed -i 's/ext.kotlin_version = .*/ext.kotlin_version = "1.8.21"/' android/build.gradle
          sed -i 's/com.android.tools.build:gradle:.*/com.android.tools.build:gradle:8.2.0/' android/build.gradle
          echo "Updated compileSdkVersion, targetSdkVersion, Kotlin, and Gradle Plugin"

      # 8. Get dependencies
      - name: Flutter Pub Get
        run: flutter pub get

      # 9. Replace launcher icon
      - name: Replace Flutter Logo in Android
        run: |
          LOGO="assets/logo.png"
          for folder in android/app/src/main/res/mipmap-*; do
            cp $LOGO $folder/ic_launcher.png
          done
          echo "Logo replaced in all mipmap folders"

      # 10. Clean previous build
      - name: Flutter Clean
        run: flutter clean

      # 11. Build APK
      - name: Build Release APK
        run: flutter build apk --release --no-tree-shake-icons

      # 12. Upload APK
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: build/app/outputs/flutter-apk/app-release.apk
