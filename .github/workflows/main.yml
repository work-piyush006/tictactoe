name: Flutter Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: stable
          cache: true

      # 3. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # 4. Reinstall SDK 35 (fix corrupt SDK issue)
      - name: Reinstall Android SDK 35
        run: |
          yes | sdkmanager --uninstall "platforms;android-35"
          yes | sdkmanager "platforms;android-35"
          yes | sdkmanager "build-tools;35.0.3"

      # 5. Install dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # 6. Generate fresh Android platform if missing
      - name: Generate Android platform if missing
        run: |
          if [ ! -d "android" ]; then
            flutter create --platforms=android .
          fi

      # 7. Add Internet permission
      - name: Add Internet permission
        run: |
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if ! grep -q 'android.permission.INTERNET' "$MANIFEST"; then
            sed -i '/<application/i\    <uses-permission android:name="android.permission.INTERNET"/>' "$MANIFEST"
          fi

      # 8. Copy Firebase config
      - name: Copy Firebase config
        run: |
          if [ -f "firebase/google-services.json" ]; then
            mkdir -p android/app
            cp firebase/google-services.json android/app/google-services.json
          fi

      # 9. Patch android/build.gradle
      - name: Patch android/build.gradle
        run: |
          cat > android/build.gradle <<EOF
           buildscript {
            ext.kotlin_version = '2.2.20'
           repositories {
           google()
           mavenCentral()
             }
             dependencies {
             classpath 'com.android.tools.build:gradle:8.1.0'
             classpath 'com.google.gms:google-services:4.4.2'
             classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:\$kotlin_version"
              }
               }
             allprojects {
             repositories {
             google()
             mavenCentral()
              }
             }
             EOF

      # 10. Patch android/app/build.gradle for Ads & Google Services
      - name: Patch android/app/build.gradle
        run: |
          FILE="android/app/build.gradle"
          if ! grep -q "com.google.gms.google-services" "$FILE"; then
            sed -i '/^plugins {/a\    id "com.google.gms.google-services"' "$FILE"
          fi
          if ! grep -q "com.google.android.gms:play-services-ads" "$FILE"; then
            sed -i '/^dependencies {/a\    implementation "com.google.android.gms:play-services-ads:23.1.0"' "$FILE"
          fi

      # 11. Replace default launcher icon
      - name: Replace launcher icon
        run: |
          ICON_PATH="assets/logo.png"
          for size in mdpi hdpi xhdpi xxhdpi xxxhdpi; do
            mkdir -p android/app/src/main/res/mipmap-$size
            cp $ICON_PATH android/app/src/main/res/mipmap-$size/ic_launcher.png
          done

      # 12. Build APK (no tree-shake icons)
      - name: Build APK
        run: flutter build apk --release --no-tree-shake-icons

      # 13. Build AAB
      - name: Build AAB
        run: flutter build appbundle --release --no-tree-shake-icons

      # 14. Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
          retention-days: 7
